// Crie uma interface Logger .
// Logger deve possuir um m√©todo log , que recebe um par√¢metro do tipo string e n√£o retorna nada ( void ).

interface Logger {
  log(param: string): void;
}

// Crie uma classe ConsoleLogger que implementa Logger . Voc√™ deve imaginar como o m√©todo log deve ser implementado, n√©? üòÅ.
// Crie uma classe ConsoleLogger2 igual √† classe anterior, apenas a t√≠tulo de exemplo.

class ConsoleLogger implements Logger {
  log(param: string): void {
    console.log(param);
  }
}

class ConsoleLogger2 implements Logger {
  log(param: string): void {
    console.log('Logger2', + param);
  }
}


// No console.log dentro do m√©todo log , diferencie o ConsoleLogger2 do ConsoleLogger .
// Crie uma interface Database .

interface Database {
  logger: Logger;
  save(key:string, value: string): void;
}
// Database deve possuir um atributo do tipo Logger .
// Database deve possuir um m√©todo save , que recebe dois par√¢metros, key e value , ambos strings , e n√£o retorna nada ( void ).

// Crie uma classe ExampleDatabase que implementa Database .
// ExampleDatabase deve receber o Logger como par√¢metro do construtor, e possuir como valor padr√£o um ConsoleLogger .

class ExampleDatabase implements Database {
  constructor(public logger: Logger = new ConsoleLogger()) {};

  // Dentro do m√©todo save , chame a fun√ß√£o log do Logger passado para o database para fazer o log dos par√¢metros passados para a save .

  save(key: string, value: string): void {
    this.logger.log(`Salvando o valor ${value} na chave ${key}`)
  }

}

const logger1 = new ConsoleLogger();
const logger2 = new ConsoleLogger2();


const database1 = new ExampleDatabase(logger1);
const database2 = new ExampleDatabase(logger2);
const database3 = new ExampleDatabase();

// Crie um objeto de cada um dos Loggers .
// Crie tr√™s objetos da ExampleDatabase , cada um dos dois primeiros recebendo um dos Loggers , e o √∫ltimo n√£o recebendo nenhum.
// Utilize todos eles para salvar um conte√∫do fict√≠cio.

database1.save('chave 1', 'valor 1');
database1.save('chave 2', 'valor 2');
database1.save('chave 3', 'valor 3');

